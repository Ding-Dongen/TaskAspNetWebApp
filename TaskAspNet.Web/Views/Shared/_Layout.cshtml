<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TaskAspNet</title>
    @* <script type="importmap"></script> *@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>


    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    @await RenderSectionAsync("Styles", required: false)
</head>
<body class="@(signInManager.IsSignedIn(User) ? "authenticated" : "")">

    @if (signInManager.IsSignedIn(User))
    {
        
        <div class="menu-portal">
            @await Component.InvokeAsync("MainLayout")

            <div class="main-content">
                @RenderBody()  
            </div>
        </div>
    }
    else
    {
       
        <div class="auth-container">
            @RenderBody()
        </div>
    }
    <script src="https://cdn.jsdelivr.net/npm/fuse.js@7.0.0/dist/fuse.min.js" defer></script>
    <script src="~/js/site.js" asp-append-version="true"></script>


    @await RenderSectionAsync("Scripts", required: false)

    @{
        bool hasConsent = ViewBag.HasConsent == null ? false : (bool)ViewBag.HasConsent;
    }

    @await Html.PartialAsync("~/Views/Shared/Partials/Components/_ConsentModal.cshtml", new CookieConsentViewModel
{
    NecessaryCookies = true,
    FunctionalCookies = false,
    AnalyticsCookies = false,
    MarketingCookies = false,
    AdvertisingCookies = false
})

    <script>
        const hasConsent = @Html.Raw(hasConsent.ToString().ToLower());
        const isSignedIn = @Html.Raw(signInManager.IsSignedIn(User).ToString().ToLower());

        document.addEventListener("DOMContentLoaded", function () {
            if (!hasConsent && !isSignedIn && !localStorage.getItem("cookieConsentSubmitted")) {
                if (typeof showCookieModal === "function") {
                    showCookieModal();
                }
            }
        });
    </script>


    <button type="button"
            class="cookie-button"
            onclick="showCookieModal();">
        <i class="fa-duotone fa-solid fa-cookie-bite"></i>
    </button>


</body>
</html>

